name: Seed Issues

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'If true, only log planned changes'
        required: false
        default: 'false'

jobs:
  create-issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const core = require('@actions/core');
            const { owner, repo } = context.repo;
            const seedsPath = path.join(process.env.GITHUB_WORKSPACE, '.github', 'issue_seeds.json');
            const seeds = JSON.parse(fs.readFileSync(seedsPath, 'utf8'));
            const dryRun = (core.getInput('dry_run') || 'false').toLowerCase() === 'true';

            // Map milestone title -> number
            const milestones = await github.paginate(github.rest.issues.listMilestones, { owner, repo, state: 'all' });
            const titleToNumber = new Map(milestones.map(m => [m.title, m.number]));

            for (const s of seeds) {
              const milestone_number = s.milestone && titleToNumber.get(s.milestone);
              const req = { owner, repo, title: s.title, body: s.body || '', labels: s.labels || undefined, assignees: s.assignees || undefined, milestone: milestone_number };
              if (dryRun) {
                core.info(`Would create issue: ${s.title}`);
              } else {
                try {
                  await github.rest.issues.create(req);
                  core.info(`Created issue: ${s.title}`);
                } catch (e) {
                  core.warning(`Failed to create issue '${s.title}': ${e.message}`);
                }
              }
            }
